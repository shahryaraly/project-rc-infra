name: Build and Push

on:
  push:
    branches: [ "main" ]
    paths:
      - '**'
  workflow_dispatch:   # Add this line to allow manual/API trigger!
    inputs:
      application_repo:
        description: 'Repository to build (format: owner/repo)'
        required: true
        type: string
      dockerfile_path:
        description: 'Path to Dockerfile in the application repo'
        required: false
        type: string
        default: "Dockerfile"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.application_repo }}
          token: ${{ secrets.GHCR_TOKEN }}
          path: app-code

      - name: Debug - Verify Repository Contents
        run: |
          echo "=== WORKSPACE ==="
          ls -la
          echo "=== APP-CODE ==="
          ls -la app-code/
          echo "=== DOCKERFILE ==="
          test -f "app-code/${{ inputs.dockerfile_path }}" && \
            echo "Dockerfile exists at app-code/${{ inputs.dockerfile_path }}" || \
            { echo "ERROR: Dockerfile not found"; exit 1; }

      - name: Login to GHCR
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and Push Docker Image
        run: |
          # Extract just the repo name (remove owner prefix)
          APP_NAME=$(echo "${{ inputs.application_repo }}" | cut -d'/' -f2)
          IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/$APP_NAME:${{ github.sha }}
          
          echo "Building $IMAGE_NAME from ${{ inputs.dockerfile_path }}"
          cd app-code
          docker build -t $IMAGE_NAME -f ${{ inputs.dockerfile_path }} .
          docker push $IMAGE_NAME

          # Output the image name for downstream jobs
          echo "image_name=$IMAGE_NAME" >> $GITHUB_OUTPUT
